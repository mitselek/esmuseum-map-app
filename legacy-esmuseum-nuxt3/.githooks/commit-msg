#!/bin/bash

# Commit message hook for Constitutional Compliance
# F017 Phase 2: Enhanced Workflow Implementation
#
# This hook validates commit messages follow our constitutional standards
# and includes appropriate constitutional compliance references.

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

echo "üìù Constitutional Commit Message Validation"
echo "=========================================="

# Check commit message format
if [[ ${#COMMIT_MSG} -lt 10 ]]; then
    echo "‚ùå Commit message too short (minimum 10 characters)"
    echo "   Current: ${#COMMIT_MSG} characters"
    exit 1
fi

if [[ ${#COMMIT_MSG} -gt 100 ]]; then
    echo "‚ö†Ô∏è  Commit message quite long (${#COMMIT_MSG} characters)"
    echo "   Consider keeping first line under 50 characters"
fi

# Check for constitutional compliance references
CONSTITUTIONAL_REFS=$(echo "$COMMIT_MSG" | grep -i -E "(constitutional|article|compliance|f017)" || true)

# Check for feature references
FEATURE_REFS=$(echo "$COMMIT_MSG" | grep -E "F[0-9]+" || true)

# Validate commit message patterns
VALID_PATTERNS=(
    "^(feat|fix|docs|style|refactor|test|chore|constitutional)(\(.+\))?: .+"
    "^F[0-9]+: .+"
    "^CONSTITUTIONAL: .+"
    "^Article [IVX]+: .+"
)

PATTERN_MATCH=false
for pattern in "${VALID_PATTERNS[@]}"; do
    if [[ $COMMIT_MSG =~ $pattern ]]; then
        PATTERN_MATCH=true
        break
    fi
done

echo "üìã Commit Message Analysis:"
echo "   Length: ${#COMMIT_MSG} characters"
echo "   Constitutional refs: $([ ! -z "$CONSTITUTIONAL_REFS" ] && echo "Found" || echo "None")"
echo "   Feature refs: $([ ! -z "$FEATURE_REFS" ] && echo "Found" || echo "None")"
echo "   Format valid: $([ "$PATTERN_MATCH" = true ] && echo "Yes" || echo "No")"

# Enhanced validation for constitutional changes
if echo "$COMMIT_MSG" | grep -q -i "constitutional\|article\|compliance"; then
    echo ""
    echo "üèõÔ∏è  Constitutional change detected!"
    echo "   This commit appears to modify constitutional compliance"
    echo "   Ensuring extra validation..."
    
    # Add constitutional compliance marker if not present
    if ! echo "$COMMIT_MSG" | grep -q "CONSTITUTIONAL:"; then
        echo "" >> "$COMMIT_MSG_FILE"
        echo "CONSTITUTIONAL: Compliance validation required" >> "$COMMIT_MSG_FILE"
        echo "‚úÖ Added constitutional compliance marker"
    fi
fi

# Feature specification change validation
if echo "$COMMIT_MSG" | grep -q "F[0-9]\+"; then
    FEATURE_NUM=$(echo "$COMMIT_MSG" | grep -o "F[0-9]\+" | head -1 | sed 's/F//')
    echo ""
    echo "üìã Feature specification change detected: F$FEATURE_NUM"
    echo "   Feature-related commits should include:"
    echo "   - Clear description of constitutional compliance"
    echo "   - Reference to quality gates if applicable"
    echo "   - Phase information (specify/plan/tasks/implement)"
fi

echo ""

# Final validation
if [ "$PATTERN_MATCH" = false ]; then
    echo "‚ùå Commit message format invalid"
    echo ""
    echo "Valid formats:"
    echo "  feat(component): add new functionality"
    echo "  fix(api): resolve authentication issue"
    echo "  constitutional: update Article II compliance"
    echo "  F018: implement enhanced task scoring"
    echo "  CONSTITUTIONAL: add TypeScript interfaces"
    echo "  Article VII: refactor component modularity"
    echo ""
    echo "Current message:"
    echo "  $COMMIT_MSG"
    exit 1
fi

echo "‚úÖ Commit message validation passed"
echo "üìù Message follows constitutional commit standards"