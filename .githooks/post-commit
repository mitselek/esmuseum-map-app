#!/bin/bash

# Post-commit hook for Constitutional Compliance
# F017 Phase 2: Enhanced Workflow Implementation
#
# This hook runs after successful commits to provide constitutional
# compliance feedback and suggestions for continuous improvement.

echo ""
echo "üéâ Constitutional Commit Successfully Applied!"
echo "==========================================="

COMMIT_HASH=$(git rev-parse HEAD)
COMMIT_MSG=$(git log -1 --pretty=%B)
CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)

echo "üìÑ Commit: ${COMMIT_HASH:0:8}"
echo "üìù Message: $(echo "$COMMIT_MSG" | head -1)"
echo "üìÅ Files changed: $(echo "$CHANGED_FILES" | wc -l)"

# Analyze constitutional impact
CONSTITUTIONAL_IMPACT=false

# Check for Vue files (Article I)
if echo "$CHANGED_FILES" | grep -q '\.vue$'; then
    echo "üîç Vue components modified - Article I (Composition API) applies"
    CONSTITUTIONAL_IMPACT=true
fi

# Check for TypeScript files (Article II)
if echo "$CHANGED_FILES" | grep -q '\.ts$'; then
    echo "üîç TypeScript files modified - Article II (TypeScript-First) applies"
    CONSTITUTIONAL_IMPACT=true
fi

# Check for test files (Article III)
if echo "$CHANGED_FILES" | grep -q 'test\|spec'; then
    echo "üîç Test files modified - Article III (Test-Driven Development) applies"
    CONSTITUTIONAL_IMPACT=true
fi

# Check for i18n files (Article IV)
if echo "$CHANGED_FILES" | grep -q 'locales\|i18n'; then
    echo "üîç Internationalization files modified - Article IV (i18n-First) applies"
    CONSTITUTIONAL_IMPACT=true
fi

# Check for API files (Article V)
if echo "$CHANGED_FILES" | grep -q 'api\|server'; then
    echo "üîç API files modified - Article V (Entu API Standards) applies"
    CONSTITUTIONAL_IMPACT=true
fi

# Check for feature specifications
if echo "$CHANGED_FILES" | grep -q '\.copilot-workspace/features'; then
    echo "üìã Feature specifications modified - Spec-Driven Development workflow"
    CONSTITUTIONAL_IMPACT=true
    
    # Extract feature numbers
    FEATURE_FILES=$(echo "$CHANGED_FILES" | grep '\.copilot-workspace/features/.*\.md$')
    for FEATURE_FILE in $FEATURE_FILES; do
        if [[ $FEATURE_FILE =~ F([0-9]+)- ]]; then
            FEATURE_NUM="${BASH_REMATCH[1]}"
            echo "   üìã Feature F$FEATURE_NUM specification updated"
            echo "   üí° Consider running: npm run gate:specify $FEATURE_NUM"
        fi
    done
fi

if [ "$CONSTITUTIONAL_IMPACT" = true ]; then
    echo ""
    echo "üèõÔ∏è  Constitutional Compliance Recommendations:"
    echo ""
    echo "Post-commit validation (optional but recommended):"
    echo "  npm run validate:all                    # Full constitutional validation"
    echo "  npm run validate:constitutional         # Pattern compliance check"
    echo "  npm run test:coverage                   # Test coverage validation"
    echo ""
    echo "Quality assurance:"
    echo "  npm run lint                           # ESLint constitutional rules"
    echo "  npm run dev                            # Test in development"
    echo "  npm run build                          # Validate production build"
    echo ""
    echo "Documentation:"
    echo "  üìñ Constitutional Framework: memory/esmuseum-constitution.md"
    echo "  üìã Workflow Documentation: .copilot-workspace/workflows/"
    echo "  üéØ Quality Gates: .copilot-workspace/templates/"
else
    echo ""
    echo "‚ÑπÔ∏è  No direct constitutional impact detected"
    echo "   This commit appears to be documentation or configuration changes"
fi

echo ""
echo "üöÄ Next Steps:"
echo "   ‚Ä¢ Continue constitutional development practices"
echo "   ‚Ä¢ Maintain test-driven feature development (Article III)"
echo "   ‚Ä¢ Consider running full validation before major releases"
echo ""
echo "üìö Resources:"
echo "   ‚Ä¢ Constitutional Articles: memory/esmuseum-constitution.md"
echo "   ‚Ä¢ Workflow Commands: npm run workflow"
echo "   ‚Ä¢ Quality Validation: npm run validate:all"

# Optional: Run lightweight post-commit validation
if command -v npm &> /dev/null; then
    if [ -f "package.json" ] && [ -d "node_modules" ]; then
        echo ""
        echo "üîÑ Running lightweight post-commit validation..."
        
        # Quick lint check (non-blocking)
        if npm run lint > /dev/null 2>&1; then
            echo "‚úÖ Post-commit ESLint validation passed"
        else
            echo "‚ö†Ô∏è  Post-commit ESLint issues detected (run 'npm run lint' to fix)"
        fi
        
        # Quick TypeScript check (non-blocking)
        if npx tsc --noEmit > /dev/null 2>&1; then
            echo "‚úÖ Post-commit TypeScript validation passed"
        else
            echo "‚ö†Ô∏è  Post-commit TypeScript issues detected (run 'npm run validate:typescript')"
        fi
    fi
fi

echo ""
echo "‚ú® Constitutional development continues! Keep up the excellent work!"